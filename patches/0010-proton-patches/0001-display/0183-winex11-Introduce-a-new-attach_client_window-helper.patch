From 3a688408a5eda8aec354510587ef838c5ddedcf5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 30 Nov 2023 17:29:36 +0100
Subject: [PATCH 0183/1306] winex11: Introduce a new attach_client_window
 helper.

---
 dlls/winex11.drv/window.c | 38 +++++++++++++++++++++++++++-----------
 1 file changed, 27 insertions(+), 11 deletions(-)

diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 2fe824c66aa..8430c08f712 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -1707,6 +1707,27 @@ static void detach_client_window( struct x11drv_win_data *data, Window client_wi
 }
 
 
+/**********************************************************************
+ *             attach_client_window
+ */
+static void attach_client_window( struct x11drv_win_data *data, Window client_window )
+{
+    if (data->client_window == client_window || !client_window) return;
+    detach_client_window( data, data->client_window, TRUE );
+    data->client_window = client_window;
+
+    if (!data->whole_window) return;
+
+    XSaveContext( data->display, client_window, winContext, (char *)data->hwnd );
+    XSelectInput( data->display, client_window, ExposureMask );
+    XFlush( data->display ); /* make sure XSelectInput is enabled for client_window after this point */
+
+    XReparentWindow( gdi_display, client_window, data->whole_window, data->client_rect.left - data->whole_rect.left,
+                     data->client_rect.top - data->whole_rect.top );
+    TRACE( "%p/%lx attached client window %lx\n", data->hwnd, data->whole_window, client_window );
+}
+
+
 /**********************************************************************
  *      destroy_client_window
  */
@@ -1934,7 +1955,6 @@ static void destroy_whole_window( struct x11drv_win_data *data, BOOL already_des
 void set_window_visual( struct x11drv_win_data *data, const XVisualInfo *vis, BOOL use_alpha )
 {
     Window client_window = data->client_window;
-    Window whole_window = data->whole_window;
 
     if (!data->use_alpha == !use_alpha) return;
     if (data->surface) window_surface_release( data->surface );
@@ -1942,18 +1962,14 @@ void set_window_visual( struct x11drv_win_data *data, const XVisualInfo *vis, BO
     data->use_alpha = use_alpha;
 
     if (data->vis.visualid == vis->visualid) return;
-    data->client_window = 0;
-    destroy_whole_window( data, client_window != 0 /* don't destroy whole_window until reparented */ );
+    client_window = data->client_window;
+    /* detach the client before re-creating whole_window */
+    detach_client_window( data, client_window, TRUE );
+    destroy_whole_window( data, FALSE );
     data->vis = *vis;
     create_whole_window( data );
-    if (!client_window) return;
-    /* move the client to the new parent */
-    XReparentWindow( gdi_display, client_window, data->whole_window,
-                     data->client_rect.left - data->whole_rect.left,
-                     data->client_rect.top - data->whole_rect.top );
-    data->client_window = client_window;
-    XSync( gdi_display, False ); /* make sure XReparentWindow requests have completed before destroying whole_window */
-    XDestroyWindow( data->display, whole_window );
+    /* attach the client back to the re-created whole_window */
+    attach_client_window( data, client_window );
 }
 
 
-- 
2.43.2

