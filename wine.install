post_install() {
  echo "Run 'systemctl restart systemd-binfmt' in order to make the wine binfmt available on your system."
  inform_patches
  #echo "Setting wineserver and/or wine-preloader capabilities"
  #setcap cap_net_raw+eip /usr/bin/wineserver 2>/dev/null
  #setcap cap_net_raw+eip /usr/bin/wine-preloader 2>/dev/null
  #setcap cap_net_raw+eip /usr/bin/wine64-preloader 2>/dev/null
}

post_remove() {
  echo "binfmt binary formats will be updated at reboot"
}

post_upgrade() {
  inform_patches
  #echo "Setting wineserver and/or wine-preloader capabilities"
  #setcap cap_net_raw+eip /usr/bin/wineserver 2>/dev/null
  #setcap cap_net_raw+eip /usr/bin/wine-preloader 2>/dev/null
  #setcap cap_net_raw+eip /usr/bin/wine64-preloader 2>/dev/null
}

inform_patches() {
  echo "Remember to export WINEESYNC=1 to use Esync or WINEFSYNC=1 to use Fsync/Futex2"
  echo "For best performance, the environment variables WINE_DISABLE_FAST_SYNC=0 (+ winesync kernel module enabled),"
  echo ", WINEESYNC=0, and WINEFSYNC=1 are recommended"
  echo ""
  echo "You can also hide wine version using export WINE_BLOCK_GET_VERSION=1"
  echo "This build is also bundled with openglfreak's latency reduction patch; try it with export WINE_OPENGL_LATENCY_REDUCTION=1"
  echo ""
  echo "Please be aware winepulse.drv will negotiate the lowest possible period size with your audio server"
  echo "(Advanced users can consider manually setting the STAGING_AUDIO_PERIOD and STAGING_AUDIO_DURATION environment variables)"
  echo "For other interesting environment variables, see https://wiki.winehq.org/Wine-Staging_Environment_Variables"
}
